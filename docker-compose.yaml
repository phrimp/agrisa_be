services:
  # Consul server with environment variables for basic configuration
  consul-server:
    image: hashicorp/consul:1.15.4
    container_name: consul-server
    restart: unless-stopped
    volumes:
      - consul-data:/consul/data
    ports:
      - "${CONSUL_HTTP_PORT}:8500"
      - "${CONSUL_DNS_PORT}:8600/tcp"
      - "${CONSUL_DNS_PORT}:8600/udp"
    environment:
      - CONSUL_BIND_INTERFACE=eth0
      - CONSUL_LOG_LEVEL=${CONSUL_LOG_LEVEL:-INFO}
      - CONSUL_LOCAL_CONFIG={"datacenter":"${CONSUL_DATACENTER:-dc1}","server":true,"ui_config":{"enabled":true},"bootstrap_expect":1,"node_name":"consul-server","bind_addr":"0.0.0.0","client_addr":"0.0.0.0","encrypt":"${CONSUL_ENCRYPT_KEY}"}
    command: "agent -server -ui -client=0.0.0.0"
    healthcheck:
      test: ["CMD", "consul", "members"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - consul-net

  # Traefik API Gateway with environment variables for basic configuration
  traefik:
    image: traefik:3.3
    container_name: traefik
    restart: unless-stopped
    depends_on:
      - consul-server
      - traefik-consul-register
    ports:
      - "${TRAEFIK_HTTP_PORT}:80"
      - "${TRAEFIK_HTTPS_PORT}:443"
      - "${TRAEFIK_DASHBOARD_PORT}:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - TRAEFIK_ENTRYPOINTS_WEB_ADDRESS=:80
      - TRAEFIK_ENTRYPOINTS_WEBSECURE_ADDRESS=:443
      - TRAEFIK_API_DASHBOARD=${TRAEFIK_DASHBOARD_ENABLED:-false}
      - TRAEFIK_API_INSECURE=true
      - TRAEFIK_PROVIDERS_DOCKER=true
      - TRAEFIK_PROVIDERS_DOCKER_ENDPOINT=unix:///var/run/docker.sock
      - TRAEFIK_PROVIDERS_DOCKER_EXPOSEDBYDEFAULT=false
      - TRAEFIK_PROVIDERS_DOCKER_NETWORK=microservices_template_traefik-net
      - TRAEFIK_PROVIDERS_CONSUL=true
      - TRAEFIK_PROVIDERS_CONSUL_ENDPOINTS=http://consul-server:8500
      - TRAEFIK_PROVIDERS_CONSUL_ROOTKEY=${TRAEFIK_CONSUL_ROOTKEY:-traefik}
      - TRAEFIK_LOG_LEVEL=${TRAEFIK_LOG_LEVEL:-INFO}
    networks:
      - consul-net
      - traefik-net

  # Keep middleware registration script for complex configurations
  traefik-consul-register:
    image: alpine:latest
    container_name: traefik-consul-register
    depends_on:
      - consul-server
    volumes:
      - ./traefik/scripts:/scripts
      - ./traefik/config:/config
      - ./.env:/.env
    command: >
      sh -c "
        apk add --no-cache curl jq bash dos2unix &&
        cd /scripts &&
        dos2unix register-traefik-config-to-consul.sh &&
        chmod +x register-traefik-config-to-consul.sh &&
        bash ./register-traefik-config-to-consul.sh
      "
    environment:
      # Middleware configurations
      - TRAEFIK_RATE_LIMIT_AVERAGE=${TRAEFIK_RATE_LIMIT_AVERAGE:-100}
      - TRAEFIK_RATE_LIMIT_BURST=${TRAEFIK_RATE_LIMIT_BURST:-50}
      - TRAEFIK_IP_WHITELIST_ENABLED=${TRAEFIK_IP_WHITELIST_ENABLED:-false}
      - TRAEFIK_IP_WHITELIST=${TRAEFIK_IP_WHITELIST:-127.0.0.1/32}
    networks:
      - consul-net

  # MongoDB Service
  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: unless-stopped
    ports:
      - "${MONGODB_PORT:-27017}:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USERNAME:-root}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD:-example}
    volumes:
      - mongodb_data:/data/db
      - ./logs/mongodb:/var/log/mongodb
    command: mongod --logpath /var/log/mongodb/mongodb.log --logRotate reopen --logappend
    networks:
      - consul-net
      - traefik-net
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 3
    labels:
      - "traefik.enable=false"

  # Redis Service
  redis:
    image: redis:latest
    container_name: redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
      - ./logs/redis:/var/log/redis
    environment:
      - REDIS_LOG_LEVEL=${REDIS_LOG_LEVEL:-notice}
      - REDIS_PASSWORD=${REDIS_PASSWORD:-example}
    networks:
      - consul-net
      - traefik-net
    command: redis-server --requirepass ${REDIS_PASSWORD:-example} --loglevel ${REDIS_LOG_LEVEL:-notice} --logfile /var/log/redis/redis.log
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD:-example}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    labels:
      - "traefik.enable=false"

  # MinIO Object Storage
  minio:
    image: minio/minio:latest
    container_name: minio
    restart: unless-stopped
    ports:
      - "${MINIO_API_PORT:-9000}:9000"
      - "${MINIO_CONSOLE_PORT:-9001}:9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin}
      MINIO_LOGGER_FILE: "/var/log/minio"
    volumes:
      - minio_data:/data
      - ./logs/minio:/var/log/minio
    command: server /data --console-address ":9001" --address ":9000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - consul-net
      - traefik-net
    labels:
      - "traefik.enable=false"


networks:
  consul-net:
    driver: bridge
  traefik-net:
    driver: bridge
    name: microservices_template_traefik-net

volumes:
  consul-data:
  mongodb_data:
  redis_data:
  minio_data:
